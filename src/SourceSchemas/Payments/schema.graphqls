schema {
  query: Query
  mutation: Mutation
}

"The node interface is implemented by entities that have a global unique identifier."
interface Node {
  id: ID!
}

type CreatePaymentPayload {
  payment: Payment
}

type Mutation {
  createPayment(input: CreatePaymentInput!): CreatePaymentPayload! @cost(weight: "10")
}

type Order {
  payments: [Payment!]! @cost(weight: "10")
  id: ID!
}

type Payment implements Node {
  order: Order!
  id: ID!
  amount: Decimal!
  status: PaymentStatus!
  createdAt: DateTime!
}

type Query {
  "Fetches an object given its ID."
  node("ID of the object." id: ID!): Node @cost(weight: "10")
  "Lookup nodes by a list of IDs."
  nodes("The list of node IDs." ids: [ID!]!): [Node]! @cost(weight: "10")
  paymentById(id: ID!): Payment @lookup @cost(weight: "10")
  orderById(id: ID!): Order! @lookup @internal
}

input CreatePaymentInput {
  orderId: ID!
}

enum PaymentStatus {
  PENDING
  AUTHORIZED
  DECLINED
  REFUNDED
}

"The purpose of the `cost` directive is to define a `weight` for GraphQL types, fields, and arguments. Static analysis can use these weights when calculating the overall cost of a query or response."
directive @cost("The `weight` argument defines what value to add to the overall cost for every appearance, or possible appearance, of a type, field, argument, etc." weight: String!) on SCALAR | OBJECT | FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM | INPUT_FIELD_DEFINITION

directive @internal on OBJECT | FIELD_DEFINITION

"""
The @lookup directive is used within a source schema to specify output fields
that can be used by the distributed GraphQL executor to resolve an entity by
a stable key.
"""
directive @lookup on FIELD_DEFINITION

"The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
directive @specifiedBy("The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types." url: String!) on SCALAR

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime @specifiedBy(url: "https:\/\/www.graphql-scalars.com\/date-time")

"The `Decimal` scalar type represents a decimal floating-point number."
scalar Decimal
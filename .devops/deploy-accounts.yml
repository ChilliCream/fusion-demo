trigger:
  branches:
   include:
     - main
  paths:
    include:
      - Subgraphs/Accounts
      - .devops/deploy-accounts.yml
      - .config

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
      - job: SubgraphConfiguration
        displayName: 'Subgraph Configuration'
        steps:
          - checkout: self
          - task: UseDotNet@2
            displayName: 'Install .NET SDK'
            inputs:
              packageType: 'sdk'
              useGlobalJson: true
          - task: CmdLine@2
            displayName: 'Create Subgraph Configuration'
            inputs:
              script: |
                dotnet tool restore
                dotnet run --project ./Subgraphs/Accounts -- schema export --output schema.graphql
                dotnet fusion subgraph pack -w ./Subgraphs/Accounts
              failOnStderr: true
          - task: PublishPipelineArtifact@1
            displayName: 'Upload Subgraph Configuration'
            inputs:
              targetPath: './Subgraphs/Accounts/accounts.fsp'
              artifact: 'SubgraphConfig'
              publishLocation: 'pipeline'
      - job: SubgraphContainer
        displayName: 'Subgraph Container'
        steps:
          - checkout: self
          - task: Docker@2
            displayName: 'Build Subgraph Container'
            inputs:
              containerRegistry: 'Fusion Demo Registry'
              repository: 'accounts-subgraph'
              command: 'buildAndPush'
              Dockerfile: './Subgraphs/Accounts/dockerfile'

  - stage: Development
    jobs: 
      - deployment: DeploySubgraph
        displayName: 'Deploy Subgraph'
        environment: Development
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - task: UseDotNet@2
                displayName: 'Install .NET SDK'
                inputs:
                  packageType: 'sdk'
                  useGlobalJson: true
              - task: DownloadBuildArtifacts@1
                displayName: 'Download Subgraph Configuration'
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'SubgraphConfig'
                  downloadPath: '$(System.ArtifactsDirectory)/subgraph'
              - task: CmdLine@2
                displayName: 'Begin Subgraph Deployment'
                inputs:
                  script: |
                    dotnet tool restore
                    dotnet fusion subgraph config set http --url $(DevSubgraphUrl) -c $(System.ArtifactsDirectory)/subgraph/accounts.fsp
                    dotnet barista fusion-configuration publish begin --tag accounts-$(Build.BuildId) --api-id $(BaristaApiId) --subgraph-name accounts --stage dev --api-key $(BaristaApiKey)
                    dotnet barista fusion-configuration publish start --api-key $(BaristaApiKey)
                    dotnet barista fusion-configuration download --api-id $(BaristaApiId) --stage dev --output-file ./gateway.fgp --api-key $(BaristaApiKey)
                    dotnet fusion compose -p ./gateway.fgp -s $(System.ArtifactsDirectory)/subgraph --enable-nodes
                  failOnStderr: true
              - task: AzureContainerApps@1
                displayName: 'Deploy Subgraph Container'
                inputs:
                  azureSubscription: 'MVP Credits(621759a8-3784-47fa-b2a9-b69c462fce44)'
                  imageToDeploy: 'cccfusionusshop.azurecr.io/accounts-subgraph:$(Build.BuildId)'
                  containerAppName: 'accounts-subgraph-dev'
                  resourceGroup: 'ccc-fusion-us'
              - task: CmdLine@2
                displayName: 'Complete Subgraph Deployment'
                inputs:
                  script: 'dotnet barista fusion-configuration publish commit --configuration ./gateway.fgp --api-key $(BaristaApiKey)'
                  failOnStderr: true
  - stage: Production
    jobs: 
      - deployment: DeploySubgraph
        displayName: 'Deploy Subgraph'
        environment: Production
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - task: UseDotNet@2
                displayName: 'Install .NET SDK'
                inputs:
                  packageType: 'sdk'
                  useGlobalJson: true
              - task: DownloadBuildArtifacts@1
                displayName: 'Download Subgraph Configuration'
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'SubgraphConfig'
                  downloadPath: '$(System.ArtifactsDirectory)/subgraph'
              - task: CmdLine@2
                displayName: 'Begin Subgraph Deployment'
                inputs:
                  script: |
                    dotnet tool restore
                    dotnet fusion subgraph config set http --url $(SubgraphUrl) -c $(System.ArtifactsDirectory)/subgraph/accounts.fsp
                    dotnet barista fusion-configuration publish begin --tag accounts-$(Build.BuildId) --api-id $(BaristaApiId) --subgraph-name accounts --stage prod --api-key $(BaristaApiKey)
                    dotnet barista fusion-configuration publish start --api-key $(BaristaApiKey)
                    dotnet barista fusion-configuration download --api-id $(BaristaApiId) --stage prod --output-file ./gateway.fgp --api-key $(BaristaApiKey)
                    dotnet fusion compose -p ./gateway.fgp -s $(System.ArtifactsDirectory)/subgraph --enable-nodes
                  failOnStderr: true
              - task: AzureContainerApps@1
                displayName: 'Deploy Subgraph Container'
                inputs:
                  azureSubscription: 'MVP Credits(621759a8-3784-47fa-b2a9-b69c462fce44)'
                  imageToDeploy: 'cccfusionusshop.azurecr.io/accounts-subgraph:$(Build.BuildId)'
                  containerAppName: 'accounts-subgraph'
                  resourceGroup: 'ccc-fusion-us'
              - task: CmdLine@2
                displayName: 'Complete Subgraph Deployment'
                inputs:
                  script: 'dotnet barista fusion-configuration publish commit --configuration ./gateway.fgp --api-key $(BaristaApiKey)'
                  failOnStderr: true